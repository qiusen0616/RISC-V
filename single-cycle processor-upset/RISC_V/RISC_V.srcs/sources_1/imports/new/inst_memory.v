module inst_memory (
    input               [31:0]  pc_i,//地址
    output              [31:0]  inst_o//数据
);

    reg [31:0]  regs [255:0];


initial begin
regs[0]  = 32'h04800093;
regs[1]  = 32'h06300113;
regs[2]  = 32'h02d00193;
regs[3]  = 32'h03000213;
regs[4]  = 32'h02000293;
regs[5]  = 32'h00100413;
regs[6]  = 32'h00500493;
regs[7]  = 32'h00115a63;
regs[8]  = 32'h00100333;
regs[9]  = 32'h002003b3;
regs[10] = 32'h000380b3;
regs[11] = 32'h00030133;
regs[12] = 32'h0021da63;
regs[13] = 32'h00200333;
regs[14] = 32'h003003b3;
regs[15] = 32'h00038133;
regs[16] = 32'h000301b3;
regs[17] = 32'h00325a63;
regs[18] = 32'h00300333;
regs[19] = 32'h004003b3;
regs[20] = 32'h000381b3;
regs[21] = 32'h00030233;
regs[22] = 32'h0042da63;
regs[23] = 32'h00400333;
regs[24] = 32'h005003b3;
regs[25] = 32'h00038233;
regs[26] = 32'h000302b3;
regs[27] = 32'h408484b3;
regs[28] = 32'hfa0496e3;
end

/*
initial  begin
            regs[0]  = 32'b00000000000000000000000000010011;
            regs[1]  = 32'b00010100110100000000001000010011;
            regs[2]  = 32'b00000000000100000000001010010011;
            regs[3]  = 32'b00000001001000000000001100010011;
            regs[4]  = 32'b00000010010000000000001110010011;
            regs[5]  = 32'b00000000100100000000010000010011;
            regs[6]  = 32'b00001111000000000000100010010011;
            regs[7]  = 32'b00001111000100000000100100010011;
            regs[8]  = 32'b00000000000000000000010010010011;
            regs[9]  = 32'b00000000001100000000011000010011;
            regs[10] = 32'b00000000001100000000011010010011;
            regs[11] = 32'b00000001111000000000011100010011;
            regs[12] = 32'b00000001111000000000011110010011;
            regs[13] = 32'b00000000000000000000100000010011;
            regs[14] = 32'b00000000000000000000010010010011;
            regs[15] = 32'b00000010110000000000000001100011;
            regs[16] = 32'b01000000010101100000011000110011;
            regs[17] = 32'b00000000110010010000000000100011;
            regs[18] = 32'b00000001001000000000100000010011;
            regs[19] = 32'b00000001000010001000000000100011;
            regs[20] = 32'b11111110010001001000010011100011;
            regs[21] = 32'b00000000000101001000010010010011;
            regs[22] = 32'b11111111100111111111000011101111;
            regs[23] = 32'b00000000000000000000010010010011;
            regs[24] = 32'b00000010111000000000000001100011;
            regs[25] = 32'b01000000010101110000011100110011;
            regs[26] = 32'b00000000111010010000000000100011;
            regs[27] = 32'b00000010010000000000100000010011;
            regs[28] = 32'b00000001000010001000000000100011;
            regs[29] = 32'b11111110010001001000010011100011;
            regs[30] = 32'b00000000000101001000010010010011;
            regs[31] = 32'b11111111100111111111000011101111;
            regs[32] = 32'b00000000000000000000010010010011;
            regs[33] = 32'b00000010110100000000000001100011;
            regs[34] = 32'b01000000010101101000011010110011;
            regs[35] = 32'b00000000110110010000000000100011;
            regs[36] = 32'b00000001001000000000100000010011;
            regs[37] = 32'b00000001000010001000000000100011;
            regs[38] = 32'b11111110010001001000010011100011;
            regs[39] = 32'b00000000000101001000010010010011;
            regs[40] = 32'b11111111100111111111000011101111;
            regs[41] = 32'b00000000000000000000010010010011;
            regs[42] = 32'b11110110111100000000110011100011;
            regs[43] = 32'b01000000010101111000011110110011;
            regs[44] = 32'b00000000111110010000000000100011;
            regs[45] = 32'b00000000100100000000100000010011;
            regs[46] = 32'b00000001000010001000000000100011;
            regs[47] = 32'b11111110010001001000010011100011;
            regs[48] = 32'b00000000000101001000010010010011;
            regs[49] = 32'b11111111100111111111000011101111;
            end
        */
    assign inst_o = regs[pc_i>>2];

endmodule